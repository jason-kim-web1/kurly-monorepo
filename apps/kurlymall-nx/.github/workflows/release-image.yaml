name: CD-Production

on:
  push:
    tags:
      - '*'
jobs:
  setup:
    name: Common Setup
    uses: thefarmersfront/kurly-web-workflows/.github/workflows/set-common-env-variables.yaml@main
    with:
      NODE_VERSION: 14.16.1

  release:
    needs: [setup]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: sre-runner
    strategy:
      matrix:
        image-name: [kurlymall-nx]
        node-version: [14.16.1]
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js Version - ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build docker image
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_STAGE=production \
            --build-arg PACKAGE_INSTALL_TOKEN=$PACKAGE_INSTALL_TOKEN \
            --build-arg APP_VERSION=${{ needs.setup.outputs.RELEASE_VERSION }} \
            -t 030787254034.dkr.ecr.ap-northeast-2.amazonaws.com/cps/${{ matrix.image-name }}:${{ needs.setup.outputs.RELEASE_VERSION }} .
        env:
          PACKAGE_INSTALL_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract static files
        run: |
          docker create --name temp_container 030787254034.dkr.ecr.ap-northeast-2.amazonaws.com/cps/${{ matrix.image-name }}:${{ needs.setup.outputs.RELEASE_VERSION }}
          docker cp temp_container:/app/.next/static out
          docker rm temp_container

      - name: Configure AWS credentials from Prod account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::804823275049:role/upload-s3-actions-role
          aws-region: ap-northeast-2
          role-duration-seconds: 1200

      - name: upload static files
        run: |
          aws s3 cp \
            --recursive \
            --region ap-northeast-2 \
            ./out s3://res.kurly.com/v/${{needs.setup.outputs.RELEASE_VERSION}}/_next/static \
            --acl bucket-owner-full-control

      - name: ecr push
        env:
          ECR_AWS_SECRET_ACCESS_KEY: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          ECR_AWS_ACCESS_KEY_ID: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
        run: sre-cli ecrPush -i cps/${{ matrix.image-name }} -t ${{ needs.setup.outputs.RELEASE_VERSION }} -a 030787254034 -l 382801500083 -l 030787254034 -n root -n kube-worker-infra-ecr-role

      - name: Send Slack
        id: slack_deploy
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Production Build is finished!! Commit message is `${{ needs.setup.outputs.COMMIT_MESSAGE }}`. TAG VERSION is `${{ needs.setup.outputs.RELEASE_VERSION }}`."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
