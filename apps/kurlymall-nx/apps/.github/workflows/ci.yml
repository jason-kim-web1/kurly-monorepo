name: CI-COVERAGE

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  setup:
    name: Common Setup
    uses: thefarmersfront/kurly-web-workflows/.github/workflows/set-common-env-variables.yaml@main
    with:
      NODE_VERSION: 14.16.1

  lint:
    needs: [setup]
    runs-on: web-runner
    strategy:
      matrix:
        node-version: [14.16.1]
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js Version - ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup NPM Cache
        id: cache-node-modules
        uses: maxnowack/local-cache@v2
        with:
          path: ${{ needs.setup.outputs.CACHE_PACKAGES_PATH }}
          key: ${{ needs.setup.outputs.CACHE_PACKAGES_KEY }}

      - name: Lint
        run: npm run lint

  build:
    needs: [setup]
    runs-on: web-runner
    strategy:
      matrix:
        node-version: [14.16.1]
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js Version - ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup NPM Cache
        id: cache-node-modules
        uses: maxnowack/local-cache@v2
        with:
          path: ${{ needs.setup.outputs.CACHE_PACKAGES_PATH }}
          key: ${{ needs.setup.outputs.CACHE_PACKAGES_KEY }}

      - name: Run Build
        run: npm run build:dev
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

  prepare-test:
    needs: [setup]
    runs-on: web-runner
    strategy:
      matrix:
        node-version: [14.16.1]
    outputs:
      TEST_CHUNK_IDS: ${{ steps.divide_test.outputs.TEST_CHUNK_IDS }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js Version - ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup NPM Cache
        id: cache-node-modules
        uses: maxnowack/local-cache@v2
        with:
          path: ${{ needs.setup.outputs.CACHE_PACKAGES_PATH }}
          key: ${{ needs.setup.outputs.CACHE_PACKAGES_KEY }}

      - name: Divide Test
        id: divide_test
        run: |
          TEST_DIVIDER_WORKING_DIR=nx-test
          TEST_CHUNKS_DIR_NAME=chunks
          TEST_DIVIDER_CHUNKS_DIR=$TEST_DIVIDER_WORKING_DIR/$TEST_CHUNKS_DIR_NAME

          echo "TEST_DIVIDER_WORKING_DIR_NAME=$TEST_DIVIDER_WORKING_DIR" >> $GITHUB_ENV
          echo "TEST_CHUNKS_DIR_PATH=$TEST_DIVIDER_CHUNKS_DIR" >> $GITHUB_ENV

          TOTAL_TEST_LIST_JSON_FILE_NAME=all-test-list.json
          DIVIDED_TEST_LIST_JSON_FILE_NAME=divided-test-list.json
          CHUNK_INDEX_LIST_FILE_NAME=index-list.json

          TOTAL_LIST_PATH=$TEST_DIVIDER_WORKING_DIR/$TOTAL_TEST_LIST_JSON_FILE_NAME
          DIVIDED_LIST_PATH=$TEST_DIVIDER_WORKING_DIR/$DIVIDED_TEST_LIST_JSON_FILE_NAME
          CHUNK_INDEX_LIST_PATH=$TEST_DIVIDER_WORKING_DIR/$CHUNK_INDEX_LIST_FILE_NAME

          CHUNK_COUNT=10

          mkdir -p $TEST_DIVIDER_CHUNKS_DIR

          npx jest --listTests --json > $TOTAL_LIST_PATH

          CHUNK_COUNT=$CHUNK_COUNT jq -cM 'group_by(length % ($ENV.CHUNK_COUNT | tonumber))' $TOTAL_LIST_PATH > $DIVIDED_LIST_PATH

          for ((i = 0; i < CHUNK_COUNT; i ++));
          do
            echo "Check $i"
            echo $(cat $DIVIDED_LIST_PATH | jq ".[$i] | join(\" \") | @text") > $TEST_DIVIDER_CHUNKS_DIR/$i.txt
          done

          cat $DIVIDED_LIST_PATH | jq -cM 'to_entries | map(.key)' > $CHUNK_INDEX_LIST_PATH
          echo "TEST_CHUNK_IDS=$(cat $CHUNK_INDEX_LIST_PATH)" >> $GITHUB_OUTPUT

      - name: Upload Test Chunk Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-info
          path: ${{ env.TEST_DIVIDER_WORKING_DIR_NAME }}
          retention-days: 1
          include-hidden-files: true

  run-test:
    name: Run test chunk - ${{ matrix.chunk }}
    needs: [setup, prepare-test]
    runs-on: web-runner
    strategy:
      matrix:
        node-version: [14.16.1]
        chunk: ${{ fromJson(needs.prepare-test.outputs.TEST_CHUNK_IDS) }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js Version - ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup NPM Cache
        id: cache-node-modules
        uses: maxnowack/local-cache@v2
        with:
          path: ${{ needs.setup.outputs.CACHE_PACKAGES_PATH }}
          key: ${{ needs.setup.outputs.CACHE_PACKAGES_KEY }}

      - uses: actions/download-artifact@v4
        with:
          name: test-info
          path: ${{ env.TEST_DIVIDER_WORKING_DIR_NAME }}

      - name: run chunked test
        run: NEXT_PUBLIC_STAGE=development npx jest --silent --collectCoverage --coverageDirectory=.nx-test/reports/${{ matrix.chunk }} $(cat ${{ env.TEST_CHUNKS_DIR_PATH }}/${{ matrix.chunk }}.txt)

      - name: Upload Test
        uses: actions/upload-artifact@v4
        with:
          name: test-chunk-${{ matrix.chunk }}
          path: .nx-test/reports/${{ matrix.chunk }}/lcov.info
          retention-days: 1
          include-hidden-files: true

  merge-test-coverage:
    name: Merge test coverages
    needs: [setup, run-test]
    runs-on: web-runner
    strategy:
      matrix:
        node-version: [14.16.1]
    steps:
      - name: Setup ENV - SONAR_TOKEN
        run: echo "SONAR_TOKEN=$(echo $SONAR_TOKEN)" >> $GITHUB_ENV
        shell: bash

      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js Version - ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup NPM Cache
        id: cache-node-modules
        uses: maxnowack/local-cache@v2
        with:
          path: ${{ needs.setup.outputs.CACHE_PACKAGES_PATH }}
          key: ${{ needs.setup.outputs.CACHE_PACKAGES_KEY }}

      - uses: actions/download-artifact@v4
        with:
          path: .nx-test

      - name: Create sonar-project.properties
        run: |
          COVERAGE_FILE_LIST_TEXT=$(find .nx-test/**/lcov.info | paste -sd "," -)
          SONAR_PROPERTIES_FILE_NAME=sonar-project.properties

          echo $COVERAGE_FILE_LIST_TEXT

          touch $SONAR_PROPERTIES_FILE_NAME
          echo "sonar.projectKey=thefarmersfront_kurlymall-nx" >> $SONAR_PROPERTIES_FILE_NAME
          echo "sonar.organization=thefarmersfront" >> $SONAR_PROPERTIES_FILE_NAME
          echo "sonar.sources=src" >> $SONAR_PROPERTIES_FILE_NAME
          echo "sonar.exclusions=src/**/*.test.*" >> $SONAR_PROPERTIES_FILE_NAME
          echo "sonar.tests=src" >> $SONAR_PROPERTIES_FILE_NAME
          echo "sonar.test.inclusions=src/**/*.test.*" >> $SONAR_PROPERTIES_FILE_NAME
          echo "sonar.coverage.exclusions=src/**/*.test.*" >> $SONAR_PROPERTIES_FILE_NAME
          echo "sonar.javascript.lcov.reportPaths=$COVERAGE_FILE_LIST_TEXT" >> $SONAR_PROPERTIES_FILE_NAME

      - name: run sonnarqube
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
        run: sonar-scanner -X
          -Dsonar.login=${{ env.SONAR_TOKEN }}
          -Dsonar.organization=thefarmersfront
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.projectKey=${{ needs.setup.outputs.PROJECT_ID }}
